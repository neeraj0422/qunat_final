{"version":3,"file":"static/js/97.a5ce8815.chunk.js","mappings":"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","sources":["Components/Dashboard/MarketTable.js","Components/Dashboard/Performance.js","Components/Dashboard/LatestAlertBox.js","Pages/Dashboard/Dashboard.js","Styles/Pages/Dashboard.js"],"sourcesContent":["import { StyledMarketTable } from '../../Styles/Pages/Dashboard';\n\nconst MarketTable = ({ tableHead, tableData }) => {\n  return (\n    <>\n      <StyledMarketTable>\n        <table>\n          <thead>\n            <tr className=\"table-header\">{tableHead}</tr>\n          </thead>\n          <tbody>\n            {tableData?.map((rowData, index) => (\n              <tr key={index} className=\"table-content\">\n                {Object.keys(rowData).map((key) => (\n                  <td key={key}>{rowData[key]}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </StyledMarketTable>\n    </>\n  );\n};\n\nexport default MarketTable;\n","import React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend\n);\n\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      display: false\n    },\n    title: {\n      display: false\n      //   text: 'Chart.js Line Chart'\n    }\n  },\n  scales: {\n    x: {\n      display: false // Hide x axis\n    },\n    y: {\n      display: false // Hide y axis\n    }\n  }\n};\n\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n// const dataPoints = [65, 59, 80, 81, 56, 55, 140];\n\nconst Performance = ({ chartData }) => {\n  const data = {\n    labels,\n    datasets: [\n      {\n        fill: true,\n        label: 'Dataset 2',\n        data: chartData,\n        borderColor: 'rgb(67, 160, 71)',\n        backgroundColor: 'rgba(67, 160, 71, 0.1)',\n        pointRadius: 0\n      }\n    ]\n  };\n\n  return <Line options={options} data={data} className=\"performnce-chart\" />;\n};\n\nexport default Performance;\n","import React from 'react';\n\n// const LatestAlertBox = ({ stockImg, stockName, stockPrice, stockPercentage }) => {\nconst LatestAlertBox = ({ stockImg, stockName, stockPrice, stockAction }) => {\n  return (\n    <>\n      <div className=\"alert-box\">\n        <div className=\"name\">\n          <img src={stockImg} alt={stockName} className=\"notification-image\" />\n          {/* <img src={process.env.REACT_APP_API_BASE_URL + stockImg} alt={stockName} /> */}\n          {stockName}\n        </div>\n        {/* <div className=\"price\">{`${stockAction} at ${stockPrice}`}</div> */}\n        <div className=\"alertBoxText\">{`${stockAction} at ${stockPrice.toFixed(2)}`}</div>\n        {/* <div className=\"percentage\">{stockPercentage}</div> */}\n      </div>\n    </>\n  );\n};\n\nexport default LatestAlertBox;\n","import React, { useEffect, useState } from 'react';\nimport { StyledDashboard, SyledDashboardSections } from '../../Styles/Pages/Dashboard';\nimport LatestAlertBox from '../../Components/Dashboard/LatestAlertBox';\nimport MarketTable from '../../Components/Dashboard/MarketTable';\nimport { Link, useNavigate } from 'react-router-dom';\nimport UpArrow from '../../Assets/Dashboard/UpArrow.png';\nimport DownArrow from '../../Assets/Dashboard/DownArrow.png';\n// import PerformanceChart from '../../Assets/Dashboard/Performance.png';\nimport apiRequest from '../../api/api';\nimport Performance from '../../Components/Dashboard/Performance';\nconst moment = require('moment');\n\nconst Dashboard = () => {\n  const tableHead = ['Asset', 'Change', 'Performance', 'Price', 'Action'];\n\n  const [userName, setUserName] = useState([]);\n  const [stockList, setStockList] = useState([]);\n  const [notificationList, setNotificationList] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchNotifications();\n    fetchUserName();\n  }, []);\n\n  const fetchStockList = async () => {\n    try {\n      const { responseData, error } = await apiRequest('api/v1/stock/list', 'GET');\n      if (error) {\n        console.error('Error fetching stock data:', error);\n      } else {\n        return responseData.data;\n      }\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n    }\n  };\n\n  const fetchUserName = async () => {\n    try {\n      const { responseData, error } = await apiRequest('api/v1/user-details', 'GET');\n      if (error) {\n        console.error('Error fetching stock data:', error);\n      } else {\n        setUserName(responseData.data);\n      }\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n    }\n  };\n\n  const fetchNotifications = async () => {\n    try {\n      const { responseData, error } = await apiRequest('api/v1/notifications/list', 'POST', {\n        limit: 8,\n        page: 1,\n        type: 'unread'\n      });\n\n      if (error) {\n        console.error('Error fetching notification data:', error);\n      } else {\n        setNotificationList(responseData.data);\n      }\n    } catch (error) {\n      console.error('Error fetching notification data:', error);\n    }\n  };\n\n  const handleClearButtonClick = async () => {\n    try {\n      const notificationId = notificationList?.map((notification) => notification._id);\n\n      await apiRequest('api/v1/notifications/mark-as-read', 'POST', {\n        notificationId\n      });\n\n      // Refresh the notification list\n      fetchNotifications();\n    } catch (error) {\n      console.error('Error marking notifications as read:', error);\n    }\n  };\n\n  const generateTableData = (marketData) => {\n    return marketData.assets?.map((asset) => {\n      return {\n        Asset: (\n          <Link to={`/strategies/${asset?._id}`}>\n            <div className=\"Asset d-flex align-items-center gap-2\">\n              <div className=\"asset-image\">\n                <div>\n                  <img src={asset?.asset_image_url} alt=\"logo\" />\n                </div>\n              </div>\n              <div className=\"stock-desc\">\n                <div className=\"stock-name\">{asset?.ticker_symbol}</div>\n              </div>\n            </div>\n          </Link>\n        ),\n        Change: (\n          <div className=\"d-flex align-items-center gap-2\">\n            <div>\n              <img\n                src={asset?.change_value <= 0 ? DownArrow : UpArrow}\n                alt={asset?.change_value <= 0 ? 'down' : 'up'}\n              />\n            </div>\n            <div className={`change-value ${asset?.change_value <= 0 ? 'red-text' : 'green-text'}`}>\n              {asset?.change_value?.toFixed(2)}%\n            </div>\n          </div>\n        ),\n        // Performance: <img src={PerformanceChart} alt=\"chart\" />,\n        Performance: <Performance chartData={asset.historical_data} />,\n        Price: (\n          <div className=\"price-value\">\n            <span>{asset?.currency_symbol}</span>\n            {asset?.price?.toFixed(2)}\n          </div>\n        ),\n        Action: (\n          <div className=\"action-value\">\n            <Link to={`/strategies/${asset?._id}`}>Strategies</Link>\n          </div>\n        )\n      };\n    });\n  };\n\n  const ThData = () => {\n    return tableHead?.map((data) => {\n      return (\n        <th className={data} key={data}>\n          {data}\n        </th>\n      );\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      const tmpStockList = await fetchStockList();\n      setStockList(tmpStockList);\n      const newStockList = await Promise.all(\n        tmpStockList?.map(async (item) => {\n          if (item.market_name) {\n            for (let i = 0; i < item.assets.length; i++) {\n              const { responseData, error } = await apiRequest('api/v1/yahoo-finance', 'POST', {\n                ticker_symbol: item.assets[i].ticker_symbol\n              });\n\n              // Get current date\n              const currentDate = moment();\n\n              // Calculate end date (current date)\n              const endDate = currentDate.subtract(1, 'days').format('YYYY-MM-DD');\n\n              // Calculate start date by subtracting 30 days from current date\n              const startDate = currentDate.subtract(30, 'days').format('YYYY-MM-DD');\n\n              const historicalData = await apiRequest(\n                'api/v1/yahoo-finance/historical-data',\n                'POST',\n                {\n                  ticker_symbol: item.assets[i].ticker_symbol,\n                  start_date: startDate,\n                  end_date: endDate\n                }\n              );\n\n              if (error || historicalData?.error) {\n                console.error('Error fetching yahoo data:', error);\n              } else {\n                item.assets[i].change_value =\n                  responseData?.data?.price?.regularMarketChangePercent * 100;\n                item.assets[i].price = responseData?.data?.price.regularMarketPrice;\n                item.assets[i].currency_symbol = responseData?.data?.price.currencySymbol;\n                item.assets[i].historical_data = historicalData?.responseData?.data?.map(\n                  (data) => data.close\n                );\n              }\n            }\n          }\n          return item;\n        })\n      );\n      setStockList(newStockList);\n    })();\n  }, []);\n\n  return (\n    <>\n      <StyledDashboard>\n        <div className=\"welcome-title\">Hi, {userName.first_name} Welcome to Quant11</div>\n        <SyledDashboardSections>\n          <div className=\"section-title-allBtn\">\n            <div className=\"section-title\">Latest Alerts</div>\n            <div className=\"section-allBtn-main\">\n              <div className=\"section-allBtn\" onClick={handleClearButtonClick}>\n                Clear\n              </div>\n              <div className=\"section-allBtn\" onClick={() => navigate('/notification')}>\n                More\n              </div>\n            </div>\n          </div>\n          <div className=\"alert-boxes\">\n            {notificationList?.length > 0 ? (\n              <>\n                {notificationList?.map((notification) => (\n                  <LatestAlertBox\n                    key={notification._id}\n                    stockImg={notification.asset_image_url}\n                    stockName={notification.ticker_symbol}\n                    stockPrice={notification.price}\n                    // stockPercentage={notification.action}\n                    stockAction={notification.action}\n                  />\n                ))}\n              </>\n            ) : (\n              <p>No latest alerts</p>\n            )}\n          </div>\n        </SyledDashboardSections>\n        {stockList?.map((marketData) => (\n          <SyledDashboardSections key={marketData.market_name}>\n            <div className=\"section-title-allBtn\">\n              <div className=\"section-title\">{marketData.market_name}</div>\n              <Link to={`/view-all/${marketData?.market_id}`}>\n                <div className=\"section-allBtn\">View all</div>\n              </Link>\n            </div>\n            <MarketTable tableHead={ThData()} tableData={generateTableData(marketData)} />\n          </SyledDashboardSections>\n        ))}\n      </StyledDashboard>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport TitleBG from '../../Assets/Dashboard/TitleBG.png';\nimport TradeHistoryBG from '../../Assets/Dashboard/TradeHistoryBG.png';\n\nexport const StyledDashboard = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  .welcome-title {\n    border-radius: 14px;\n    // background: linear-gradient(0deg, rgba(199, 215, 248, 0.06) 0%, rgba(199, 215, 248, 0.06) 100%),\n    //   url(${TitleBG});\n    background: linear-gradient(\n        90deg,\n        rgba(29, 30, 32, 0.2) -2.2%,\n        #1d1e20 85%,\n        rgba(29, 30, 32, 0.2) 100%\n      ),\n      url(${TitleBG});\n    padding: 24px 20px;\n    font-size: 20px;\n    background-repeat: no-repeat;\n    background-position: right;\n  }\n`;\n\nexport const SyledDashboardSections = styled.section`\n  display: flex;\n  flex-direction: column;\n  padding: 32px 24px;\n  border-radius: 14px;\n  gap: 16px;\n  background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n    #121212;\n\n  .section-title-allBtn {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    .section-title {\n      font-size: 20px;\n    }\n    .section-allBtn-main {\n      display: flex;\n      gap: 20px;\n    }\n    .section-allBtn {\n      color: #b68bf7;\n      text-decoration: underline;\n      cursor: pointer;\n    }\n  }\n\n  .alert-boxes {\n    display: flex;\n    align-items: center;\n    /* justify-content: space-between; */\n    gap: 10px;\n    overflow: auto;\n\n    .alert-box {\n      display: flex;\n      padding: 12px;\n      flex-direction: column;\n      justify-content: center;\n      align-items: flex-start;\n      max-width: 100%;\n      gap: 6px;\n      border-radius: 14px;\n      font-size: 14px;\n      background: linear-gradient(\n          0deg,\n          rgba(199, 215, 248, 0.08) 0%,\n          rgba(199, 215, 248, 0.08) 100%\n        ),\n        #121212;\n\n      .name {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n      }\n      .price {\n        font-weight: 600;\n      }\n      .percentage {\n        font-size: 14px;\n        color: #43a047;\n      }\n    }\n  }\n\n  .alertBoxText {\n    text-wrap: nowrap;\n  }\n  .notification-image {\n    height: 2rem;\n    border-radius: 50%;\n  }\n\n  @media (max-width: 767px) {\n    padding: 16px;\n\n    /* .alert-boxes {\n      flex-wrap: wrap;\n\n      .alert-box {\n        width: 45%;\n        align-items: center;\n      }\n    } */\n  }\n\n  @media (min-width: 768px) and (max-width: 1199px) {\n    padding: 32px 24px;\n    .alert-boxes {\n      flex-direction: row;\n    }\n  }\n`;\n\nexport const StyledMarketTable = styled.div`\n  table {\n    width: 100%;\n  }\n  th {\n    padding: 14px 12px;\n    font-weight: 400;\n  }\n  td {\n    padding: 14px 12px;\n  }\n  td,\n  th {\n    &:first-child {\n      min-width: 240px;\n    }\n  }\n\n  .performnce-chart {\n    height: 60px !important;\n    width: 160px !important;\n  }\n\n  tr {\n    border-bottom: 1px solid rgba(255, 255, 255, 0.04);\n\n    @media (max-width: 767px) {\n      td,\n      th {\n        &:first-child {\n          min-width: 150px;\n          position: sticky;\n          left: 0;\n          background: linear-gradient(\n              0deg,\n              rgba(199, 215, 248, 0.08) 0%,\n              rgba(199, 215, 248, 0.08) 100%\n            ),\n            #121212;\n        }\n\n        &:last-child {\n          display: none;\n        }\n      }\n    }\n  }\n  .table-header {\n    height: 52px;\n    border-radius: 4px 0px;\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.08) 0%, rgba(199, 215, 248, 0.08) 100%),\n      #121212;\n    box-shadow: 0px 2px 12px 0px rgba(0, 0, 0, 0.06);\n  }\n  .asset-image {\n    background: #ffffff;\n    color: #000000;\n    width: 55px;\n    height: 55px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    overflow: hidden;\n  }\n\n  .stock-desc {\n    .stock-name {\n      color: rgba(255, 255, 255, 0.8);\n    }\n    .stock-company {\n      font-size: 12px;\n    }\n  }\n\n  .change-value {\n    color: #43a047;\n  }\n\n  .action-value {\n    color: #b68bf7;\n    text-decoration: underline;\n  }\n\n  @media (max-width: 767px) {\n    overflow: auto;\n\n    .table-header {\n      font-size: 14px;\n    }\n    .table-content {\n      font-size: 12px;\n    }\n\n    th {\n      padding: 16px 22px;\n    }\n\n    td {\n      padding: 8px;\n    }\n    .asset-image {\n      width: 40px;\n      height: 40px;\n      padding: 3px;\n    }\n\n    .stock-desc {\n      .stock-name {\n        font-size: 12px;\n      }\n      .stock-company {\n        font-size: 10px;\n      }\n    }\n  }\n  @media (min-width: 768px) and (max-width: 1199px) {\n    td,\n    th {\n      padding: 14px 8px;\n      font-size: 14px;\n      &:first-child {\n        min-width: 200px;\n      }\n    }\n  }\n`;\n\nexport const StyledDetailPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  .table-content {\n    background: #191a1b;\n  }\n\n  .section-title {\n    font-size: 24px;\n\n    @media (max-width: 767px) {\n      font-size: 20px;\n    }\n  }\n\n  .overview-pnlCurve {\n    display: flex;\n    justify-content: space-between;\n    gap: 20px;\n\n    @media (max-width: 767px) {\n      flex-direction: column;\n    }\n  }\n`;\n\nexport const StyledDetailPageHeader = styled.section`\n  .viewAll-head {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-radius: 14px;\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n      #121212;\n    padding: 45px 24px;\n  }\n  .viewAll-left {\n    display: flex;\n    align-items: center;\n    gap: 24px;\n  }\n  .viewAll-content {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n  .viewAll-title {\n    font-size: 24px;\n  }\n  .viewAll-desc {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n  }\n\n  .tradeHistory-head {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-radius: 14px;\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n      #121212;\n  }\n  .tradeHistory-left {\n    display: flex;\n    align-items: center;\n    padding: 45px 24px;\n  }\n  .tradeHistory-right {\n    width: 50%;\n    height: 160px;\n  }\n  .right-sideBG {\n    background: url(${TradeHistoryBG}) no-repeat;\n    background-size: contain;\n    background-position: right;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: end;\n  }\n  .tradeHistory-rightBtn {\n    margin: 0 24px;\n  }\n\n  @media (max-width: 767px) {\n    .viewAll-head {\n      padding: 25px 12px;\n    }\n    .viewAll-title {\n      font-size: 18px;\n    }\n    .viewAll-desc {\n      font-size: 14px;\n      flex-direction: column;\n    }\n    .viewAll-content {\n      align-items: center;\n    }\n    .tradeHistory-head {\n      flex-direction: column;\n    }\n    .tradeHistory-left {\n      padding: 25px 12px;\n    }\n    .tradeHistory-right {\n      width: 100%;\n      height: 80px;\n    }\n    .right-sideBG {\n      justify-content: center;\n    }\n  }\n\n  @media (min-width: 768px) and (max-width: 990px) {\n    .viewAll-desc {\n      flex-direction: column;\n    }\n    .viewAll-title {\n      font-size: 20px;\n    }\n    .viewAll-desc {\n      font-size: 14px;\n    }\n    .tradeHistory-left {\n      padding: 12px 24px;\n      width: 100%;\n    }\n    .tradeHistory-right {\n      width: 100%;\n      height: 140px;\n    }\n  }\n`;\n"],"names":["_ref","tableHead","tableData","_jsx","_Fragment","children","StyledMarketTable","_jsxs","className","map","rowData","index","Object","keys","key","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Legend","options","responsive","plugins","legend","display","title","scales","x","y","labels","chartData","data","datasets","fill","label","borderColor","backgroundColor","pointRadius","Line","stockImg","stockName","stockPrice","stockAction","src","alt","concat","toFixed","moment","require","Dashboard","userName","setUserName","useState","stockList","setStockList","notificationList","setNotificationList","navigate","useNavigate","useEffect","fetchNotifications","fetchUserName","async","responseData","error","apiRequest","console","limit","page","type","generateTableData","marketData","_marketData$assets","assets","asset","_asset$change_value","_asset$price","Asset","Link","to","_id","asset_image_url","ticker_symbol","Change","change_value","DownArrow","UpArrow","Performance","historical_data","Price","currency_symbol","price","Action","tmpStockList","fetchStockList","newStockList","Promise","all","item","market_name","i","length","currentDate","endDate","subtract","format","startDate","historicalData","start_date","end_date","_responseData$data","_responseData$data$pr","_responseData$data2","_responseData$data3","_historicalData$respo","_historicalData$respo2","regularMarketChangePercent","regularMarketPrice","currencySymbol","close","StyledDashboard","first_name","SyledDashboardSections","onClick","notificationId","notification","LatestAlertBox","action","market_id","MarketTable","styled","div","_templateObject","_taggedTemplateLiteral","TitleBG","section","_templateObject2","_templateObject3","StyledDetailPage","_templateObject4","StyledDetailPageHeader","_templateObject5"],"sourceRoot":""}