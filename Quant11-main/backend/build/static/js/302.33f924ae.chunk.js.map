{"version":3,"file":"static/js/302.33f924ae.chunk.js","mappings":"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","sources":["Components/Common/BreadCrumb/BreadCrumb.js","Styles/Pages/TradeHistory.js","Components/TradeHistory/Overview.js","Components/TradeHistory/PnlGraph.js","Components/TradeHistory/PnlCurve.js","Components/TradeHistory/HistoryDataTable.js","Pages/TradeHistory/TradeHistory.js","Styles/Pages/Dashboard.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { StyledBreadCrumb } from '../../../Styles/Components/Common';\n\nconst BreadCrumb = () => {\n  const location = useLocation();\n  const pathnames = location.pathname.split('/').filter((x) => x);\n\n  return (\n    <StyledBreadCrumb>\n      <Link to=\"/\" className=\"breadcrumb-link\">\n        Home <span className=\"mx-2\">/</span>\n      </Link>\n      {pathnames.map((name, index) => {\n        // const routeTo = `/${pathnames.slice(0, index + 1).join('/')}`;\n        const isLast = index === pathnames.length - 1;\n\n        return isLast ? (\n          <span key={index} className=\"breadcrumb-text\">\n            {/*<Link to={routeTo} className=\"breadcrumb-link\">*/}\n            {/*{capitalizeFirstLetter(name)}*/}\n            {/*</Link>*/}\n          </span>\n        ) : (\n          <span key={index}>\n            {/*<Link to={routeTo} className=\"breadcrumb-link\">*/}\n            {convertToTitleCase(name)}\n            {/*</Link>{' '}*/}\n          </span>\n        );\n      })}\n    </StyledBreadCrumb>\n  );\n};\n\nconst capitalizeFirstLetter = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nconst convertToTitleCase = (inputString) => {\n  let words = inputString.split('-');\n  words = words.map(capitalizeFirstLetter);\n  let resultString = words.join(' ');\n  return resultString;\n};\n\nexport default BreadCrumb;\n","import styled from 'styled-components';\n\nexport const StyledTradeHistoryOverview = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  padding: 24px;\n  border-radius: 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n    #121212;\n  width: 40%;\n\n  .overview-content {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n  }\n  .overview-content-item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 12px 0;\n  }\n  .overview-content-itemName {\n    color: rgba(255, 255, 255, 0.6);\n  }\n\n  @media (max-width: 767px) {\n    width: 100%;\n\n    .overview-content-item {\n      font-size: 14px;\n      padding: 6px 0;\n    }\n  }\n`;\n\nexport const StyledTradeHistoryPnlCurve = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  padding: 24px;\n  border-radius: 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n    #121212;\n  width: 60%;\n\n  .pnl-curve-container {\n    height: 100% !important;\n    width: 100% !important;\n  }\n\n  @media (max-width: 767px) {\n    width: 100%;\n  }\n`;\n\nexport const StyledTradeHistoryDataTable = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  padding: 24px;\n  border-radius: 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n    #121212;\n\n  .sc-jcVcfa {\n    border-radius: 0 !important;\n  }\n  .rdt_TableHeadRow {\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.08) 0%, rgba(199, 215, 248, 0.08) 100%),\n      #121212 !important;\n    color: #fff !important;\n    font-size: 16px;\n  }\n  .rdt_TableRow {\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n      #121212;\n    font-size: 14px;\n    color: #ffffff;\n  }\n\n  .rdt_Pagination {\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.08) 0%, rgba(199, 215, 248, 0.08) 100%),\n      #121212 !important;\n    color: #fff !important;\n  }\n\n  #pagination-first-page,\n  #pagination-previous-page,\n  #pagination-next-page,\n  #pagination-last-page {\n    color: #ffffff !important;\n    fill: #ffffff !important;\n  }\n\n  .no-data {\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.08) 0%, rgba(199, 215, 248, 0.08) 100%),\n      #121212 !important;\n    color: #ffffff;\n    padding: 20px 0;\n    width: 100%;\n    text-align: center;\n  }\n`;\n","import { StyledTradeHistoryOverview } from '../../Styles/Pages/TradeHistory';\n\nconst Overview = ({ strategyDetail }) => {\n  const initialBalance = strategyDetail.initial_balance;\n  const currentBalance = strategyDetail.current_balance;\n  const diff = currentBalance - initialBalance;\n  const ROI = ((diff * 100) / initialBalance).toFixed(2);\n  const strategyDetailCurrency = strategyDetail?.currency?.toUpperCase() || '';\n\n  return (\n    <>\n      <StyledTradeHistoryOverview>\n        <div className=\"section-title\">Overview</div>\n        <div className=\"overview-content\">\n          <div className=\"overview-content-item\">\n            <li className=\"overview-content-itemName\">Close Trades P&L Amount</li>\n            <div className={`overview-content-itemValue ${diff <= 0 ? 'red-text' : 'green-text'}`}>\n              {isNaN(diff) ? '-' : parseFloat(diff).toFixed(2)}\n              <span> {strategyDetailCurrency}</span>\n            </div>\n          </div>\n          <div className=\"overview-content-item\">\n            <li className=\"overview-content-itemName\">ROI %</li>\n            <div className={`overview-content-itemValue ${diff <= 0 ? 'red-text' : 'green-text'}`}>\n              {isNaN(diff) ? '-' : parseFloat(ROI).toFixed(2)}\n            </div>\n          </div>\n          <div className=\"overview-content-item\">\n            <li className=\"overview-content-itemName\">Max Drawdown</li>\n            <div className=\"overview-content-itemValue red-text\">\n              {isNaN(diff) ? '-' : parseFloat(strategyDetail.drawdown).toFixed(2)}%\n            </div>\n          </div>\n          <div className=\"overview-content-item\">\n            <li className=\"overview-content-itemName\">Win Rate</li>\n            <div className=\"overview-content-itemValue\">{strategyDetail.profit_percentage}%</div>\n          </div>\n          <div className=\"overview-content-item\">\n            <li className=\"overview-content-itemName\">Time frame </li>\n            <div className=\"overview-content-itemValue\">{strategyDetail.timeframe}</div>\n          </div>\n          <div className=\"overview-content-item\">\n            <li className=\"overview-content-itemName\">Profit factor</li>\n            <div className=\"overview-content-itemValue\">{strategyDetail.profit_factor}</div>\n          </div>\n          <div className=\"overview-content-item\">\n            <li className=\"overview-content-itemName\">Initial balance</li>\n            <div className=\"overview-content-itemValue\">{strategyDetail.initial_balance}</div>\n          </div>\n        </div>\n      </StyledTradeHistoryOverview>\n    </>\n  );\n};\n\nexport default Overview;\n","import React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n// export const options = {\n//   responsive: true,\n//   plugins: {\n//     legend: {\n//       position: 'top'\n//     },\n//     title: {\n//       display: true,\n//       text: 'Chart.js Line Chart'\n//     },\n//     scales: {\n//       x: {\n//         display: true,\n//         title: {\n//           display: true,\n//           text: 'Date'\n//         }\n//       },\n//       y: {\n//         display: true,\n//         title: {\n//           display: true,\n//           text: 'Amount'\n//         },\n//         ticks: {\n//           min: 0,\n//           max: 1000,\n//           stepSize: 100,\n//           values: [0, 100, 200, 300, 400]\n//         }\n//       }\n//     }\n//   }\n// };\n\nconst PnlGraph = ({ historicalChartData, closeTradeChartData, strategyData }) => {\n  // console.log('historicalChartData ', historicalChartData);\n\n  // const closeTradeData = closeTradeChartData?.map((dataPoint) => dataPoint.amount.toFixed(2));\n  // const historicalData = historicalChartData?.map((dataPoint) => dataPoint.amount.toFixed(2));\n\n  // console.log('closeTradeData ', closeTradeData);\n  // console.log('historicalData ', historicalData);\n\n  //Chart show in percentages\n  const closeTradeData = closeTradeChartData?.map((dataPoint) => parseFloat(dataPoint.percentage));\n  const historicalData = historicalChartData?.map((dataPoint) => parseFloat(dataPoint.amount));\n\n  // Calculate total sums for both datasets\n  const totalCloseTrade = closeTradeData?.reduce((acc, val) => acc + val, 0);\n  const totalHistorical = historicalData?.reduce((acc, val) => acc + val, 0);\n\n  // Convert data to percentages\n  const closeTradePercentage = closeTradeData?.map((value) =>\n    (value / totalCloseTrade)?.toFixed(2)\n  );\n  const historicalPercentage = historicalData?.map((value) =>\n    (value / totalHistorical)?.toFixed(2)\n  );\n\n  const amounts = closeTradeData && historicalData ? [...closeTradeData, ...historicalData] : [];\n\n  const formattedAmounts =\n    amounts.length > 0 ? amounts?.map((amount) => Number(amount).toFixed(2)) : [];\n  const date =\n    amounts.length > 0\n      ? historicalChartData?.map((dataPoint) => dataPoint.date)\n      : closeTradeChartData?.map((dataPoint) => dataPoint.date);\n\n  // console.log('date ', date);\n  // const labels = date;\n\n  // Calculate the step size for distributing the dates into 10 entries\n  // const step = Math.ceil(date.length / 10); // We subtract 2 because we're already including the first and last dates\n\n  // Initialize an array to store the labels\n  const labels = [];\n\n  // Extract dates at intervals of the step size\n  for (let i = 0; i < date.length; i += 2) {\n    labels.push(date[i]);\n  }\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        fill: false,\n        label: `${strategyData.strategy_name}`,\n        data: closeTradePercentage,\n        borderColor: 'rgb(67, 160, 71)',\n        backgroundColor: 'rgb(67, 160, 71)'\n        // pointRadius: 0\n      },\n      {\n        fill: false,\n        label: `${strategyData.ticker_symbol}`,\n        data: historicalPercentage,\n        borderColor: 'rgb(187, 134, 252)',\n        backgroundColor: 'rgb(187, 134, 252)'\n        // pointRadius: 0\n      }\n    ]\n  };\n\n  // Find the minimum and maximum amounts\n  const minAmount = Math.min(...formattedAmounts);\n  const maxAmount = Math.max(...formattedAmounts);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Line Chart'\n      },\n      scales: {\n        x: {\n          display: true,\n          title: {\n            display: true,\n            text: 'Date'\n          }\n        },\n        y: {\n          display: true,\n          title: {\n            display: true,\n            text: 'Amount'\n          },\n          ticks: {\n            min: minAmount,\n            max: maxAmount\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: 'auto',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}>\n      <Line options={options} data={data} className=\"pnl-curve-container\" />\n    </div>\n  );\n};\n\nexport default PnlGraph;\n","import { StyledTradeHistoryPnlCurve } from '../../Styles/Pages/TradeHistory';\n// import PnlCurveChart from '../../Assets/Dashboard/PnlCurve.png';\nimport { useEffect, useState } from 'react';\nimport apiRequest from '../../api/api';\nimport moment from 'moment';\nimport { useParams } from 'react-router-dom';\nimport PnlGraph from './PnlGraph';\n\nconst PnlCurve = () => {\n  const { stockDetailId } = useParams();\n  const [historicalChartData, setHistoricalChartData] = useState([]);\n  const [closeTradeChartData, setCloseTradeChartData] = useState([]);\n  const [strategyData, setStrategyData] = useState([]);\n  // const [tradeDate, setTradeDate] = useState({\n  //   startDate: '',\n  //   endDate: ''\n  // });\n\n  // Get current date\n  const currentDate = moment();\n  const endDate = currentDate.subtract(1, 'days').format('YYYY-MM-DD');\n  const startDate = currentDate.subtract(30, 'days').format('YYYY-MM-DD');\n\n  const fetchStrategyDetail = async () => {\n    try {\n      const { responseData } = await apiRequest('api/v1/strategies/details', 'POST', {\n        id: stockDetailId\n      });\n\n      fetchHistoricalTradeData(responseData.data);\n      fetchCloseTradeData(responseData.data);\n      setStrategyData(responseData.data);\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n    }\n  };\n\n  const fetchCloseTradeData = async (strategyData) => {\n    try {\n      const { responseData } = await apiRequest('api/v1/trades/close/all', 'POST', {\n        strategy_id: stockDetailId\n      });\n      const data = responseData?.data;\n      // console.log('data', data);\n      // const closeTradedate = data?.map((dataPoint) => dataPoint.close_time);\n      // Convert dates to JavaScript Date objects\n      // const dateObjects = closeTradedate?.map((dateString) => new Date(dateString));\n\n      // Find minimum and maximum dates\n      // const minDate = new Date(Math.min(...dateObjects));\n      // const maxDate = new Date(Math.max(...dateObjects));\n\n      // Format dates using Moment.js\n      // const formattedMinDate = moment(minDate).format('YYYY-MM-DD');\n      // const formattedMaxDate = moment(maxDate).format('YYYY-MM-DD');\n      // setTradeDate({ startDate: formattedMinDate, endDate: formattedMaxDate });\n\n      const filteredTrades = data.filter((trade) => {\n        const closeDate = new Date(trade.close_time);\n        return closeDate >= new Date(startDate) && closeDate <= new Date(endDate);\n      });\n\n      // const closeTradePnL = data?.map((item) => {\n      const closeTradePnL = filteredTrades?.map((item) => {\n        return {\n          date: item.close_time,\n          amount: item.profit_loss,\n          open: item.open_price,\n          close: item.close_price\n        };\n      });\n\n      const sumByDate = closeTradePnL.reduce((acc, trade) => {\n        const currentDate = moment(trade.date).format('YYYY-MM-DD');\n\n        const diff = trade.close - trade.open;\n        // console.log('diff', diff);\n        const resultInPercentage = (diff * 100) / trade.open;\n        // console.log('resultInPercentage', resultInPercentage);\n        // If the currentDate already exists in the accumulator, add the profit/loss to its sum\n        if (acc[currentDate]) {\n          acc[currentDate] += resultInPercentage;\n        } else {\n          // Otherwise, initialize the sum for the currentDate\n          acc[currentDate] = resultInPercentage;\n        }\n\n        return acc;\n      }, {});\n      const aggregatedData = Object.entries(sumByDate)?.map(([date, sum]) => ({\n        date,\n        percentage: sum\n      }));\n      // fetchHistoricalTradeData(strategyData, formattedMinDate, formattedMaxDate);\n      fetchHistoricalTradeData(strategyData);\n      setCloseTradeChartData(aggregatedData?.reverse());\n    } catch (error) {\n      console.log('Error occured while fetching close trade data');\n    }\n  };\n\n  const fetchHistoricalTradeData = async (strategyDetail) => {\n    // if (formattedMaxDate && formattedMinDate) {\n    if (startDate && endDate) {\n      const { responseData } = await apiRequest('api/v1/yahoo-finance/historical-data', 'POST', {\n        ticker_symbol: strategyDetail?.ticker_symbol,\n        // start_date: formattedMinDate,\n        start_date: startDate,\n        end_date: endDate\n        // end_date: formattedMaxDate\n      });\n\n      const data = await responseData?.data?.map((item) => {\n        return { date: moment(item.date).format('YYYY-MM-DD'), amount: item.close };\n      });\n\n      setHistoricalChartData(data);\n      // console.log('fetchHistoricalTradeData', data);\n    } else {\n      console.log('Date is not provided ');\n    }\n  };\n\n  useEffect(() => {\n    fetchStrategyDetail();\n  }, []);\n  // console.log('startDate', startDate);\n  // console.log('endDate', endDate);\n  return (\n    <>\n      <StyledTradeHistoryPnlCurve>\n        <div className=\"section-title\">Pnl Curve</div>\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }}>\n          {/* <img src={PnlCurveChart} alt=\"chart\" /> */}\n          <PnlGraph\n            historicalChartData={historicalChartData}\n            closeTradeChartData={closeTradeChartData}\n            strategyData={strategyData}\n          />\n        </div>\n      </StyledTradeHistoryPnlCurve>\n    </>\n  );\n};\n\nexport default PnlCurve;\n","import DataTable from 'react-data-table-component';\nimport { useEffect, useState } from 'react';\nimport apiRequest from '../../api/api';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\n\nconst HistoryDataTable = ({ apiEndpoints, category }) => {\n  const { stockDetailId } = useParams();\n  const [tradeData, setTradeData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const [totalRows, setTotalRows] = useState(0);\n\n  const fetchYahooData = async (tickerSymbol) => {\n    try {\n      const { responseData, error } = await apiRequest('api/v1/yahoo-finance', 'POST', {\n        ticker_symbol: tickerSymbol\n      });\n      if (error) {\n        console.error(`Error fetching Yahoo data for ${tickerSymbol}:`, error);\n        return null;\n      }\n      return responseData?.data?.price;\n    } catch (error) {\n      console.error(`Error fetching Yahoo data for ${tickerSymbol}:`, error);\n      return null;\n    }\n  };\n\n  const fetchStockListWithYahooData = async () => {\n    try {\n      const { responseData } = await apiRequest(apiEndpoints, 'POST', {\n        strategy_id: stockDetailId,\n        page: page,\n        limit: perPage\n      });\n      if (responseData.data.length > 0) {\n        const updatedStockList = await Promise.all(\n          responseData?.data?.map(async (asset) => {\n            if (category === 'open') {\n              const yahooData = await fetchYahooData(asset.ticker_symbol);\n              if (yahooData) {\n                asset.price = yahooData.regularMarketPrice;\n              }\n            }\n            return asset;\n          })\n        );\n        setTradeData(updatedStockList);\n        setTotalRows(responseData.meta.total);\n      }\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (page || perPage) {\n      fetchStockListWithYahooData();\n    }\n  }, [page, perPage]);\n\n  const formatTime = (timeString) => {\n    if (!timeString) {\n      return '-';\n    }\n    return moment(timeString).utc().format('DD/MM/YYYY hh:mm:ss A');\n  };\n\n  const getNetPLColor = (netPL) => {\n    return netPL < 0 ? 'red-text' : 'green-text';\n  };\n\n  const renderNetPL = (row) => {\n    if (category && category === 'open') {\n      if (row.action === 'sell') {\n        return (row.close_price - row.price) * row.lot_size;\n      } else {\n        return (row.price - row.open_price) * row.lot_size;\n      }\n    } else {\n      return row.profit_loss;\n    }\n  };\n\n  const columns = [\n    {\n      name: 'Symbol',\n      selector: (row) => row.ticker_symbol || '-'\n    },\n    {\n      name: 'Direction',\n      selector: (row) => (row.action === 'buy' ? 'Buy' : 'Sell')\n    },\n    {\n      name: 'Size',\n      selector: (row) => row.lot_size\n    },\n    {\n      name: 'Open',\n      selector: (row) => (row.open_price ? parseFloat(row.open_price).toFixed(2) : '-')\n    },\n    {\n      name: 'Open Time',\n      width: '200px',\n      selector: (row) => formatTime(row.open_time)\n    },\n    {\n      name: 'Close',\n      selector: (row) => (row.close_price ? parseFloat(row.close_price).toFixed(2) : '-')\n    },\n    {\n      name: 'Close Time',\n      width: '200px',\n      selector: (row) => formatTime(row.close_time)\n    },\n    {\n      name: 'Net P/L',\n      selector: (row) => (\n        <span className={getNetPLColor(renderNetPL(row))}>\n          {renderNetPL(row) !== undefined ? parseFloat(renderNetPL(row)).toFixed(2) : '-'}\n        </span>\n      )\n    }\n  ];\n\n  return (\n    <>\n      <DataTable\n        columns={columns}\n        data={tradeData}\n        defaultSortFieldId\n        pagination\n        paginationServer\n        paginationTotalRows={totalRows}\n        onChangeRowsPerPage={(newPerPage) => setPerPage(newPerPage)}\n        onChangePage={(newPage) => setPage(newPage)}\n        noDataComponent={<div className=\"no-data\">No data available</div>}\n      />\n    </>\n  );\n};\n\nexport default HistoryDataTable;\n","import BreadCrumb from '../../Components/Common/BreadCrumb/BreadCrumb';\nimport { StyledDetailPage, StyledDetailPageHeader } from '../../Styles/Pages/Dashboard';\nimport React, { useEffect, useState } from 'react';\nimport FormButton from '../../Components/Common/Form/FormButton';\n// import GoogleIcon from '../../Assets/Dashboard/GoogleIcon.png';\nimport Overview from '../../Components/TradeHistory/Overview';\nimport PnlCurve from '../../Components/TradeHistory/PnlCurve';\nimport { StyledTradeHistoryDataTable } from '../../Styles/Pages/TradeHistory';\nimport HistoryDataTable from '../../Components/TradeHistory/HistoryDataTable';\nimport apiRequest from '../../api/api';\nimport { useParams } from 'react-router-dom';\nimport Swal from 'sweetalert2/src/sweetalert2.js';\nimport { toast } from 'react-toastify';\n\nconst TradeHistory = () => {\n  const { stockDetailId } = useParams();\n  const [strategyDetail, setStrategyDetail] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [followed, setFollowed] = useState(false);\n\n  useEffect(() => {\n    const fetchStrategyDetail = async () => {\n      try {\n        const { responseData } = await apiRequest('api/v1/strategies/details', 'POST', {\n          id: stockDetailId\n        });\n        const data = await responseData.data;\n        setStrategyDetail(data);\n        setFollowed(responseData.meta.is_followed);\n      } catch (error) {\n        console.error('Error fetching stock data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStrategyDetail();\n  }, [stockDetailId, loading]);\n\n  const handleFollowClick = async () => {\n    const result = await Swal.fire({\n      title: 'Confirm Follow',\n      text: 'Are you sure you want to follow this strategy?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, follow!',\n      cancelButtonText: 'No, cancel'\n    });\n\n    if (result.isConfirmed) {\n      try {\n        const { responseData } = await apiRequest('api/v1/follow-strategy', 'POST', {\n          strategy_id: stockDetailId\n        });\n        setFollowed(true);\n        toast(responseData.meta.message);\n      } catch (error) {\n        console.error('Error following strategy:', error);\n      }\n    }\n  };\n\n  const handleUnfollowClick = async () => {\n    const result = await Swal.fire({\n      title: 'Confirm unfollow',\n      text: 'Are you sure you want to unfollow this strategy?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, unfollow!',\n      cancelButtonText: 'No, cancel'\n    });\n\n    if (result.isConfirmed) {\n      try {\n        const { responseData } = await apiRequest('api/v1/unfollow-strategy', 'POST', {\n          strategy_id: stockDetailId\n        });\n        setFollowed(false);\n        toast(responseData.meta.message);\n      } catch (error) {\n        console.error('Error following strategy:', error);\n      }\n    }\n  };\n\n  return (\n    <>\n      <StyledDetailPage>\n        <BreadCrumb />\n        <StyledDetailPageHeader>\n          <div className=\"tradeHistory-head\">\n            <div className=\"tradeHistory-left\">\n              <div className=\"viewAll-content\">\n                <div className=\"viewAll-title\">{strategyDetail.strategy_name}</div>\n                <div className=\"viewAll-desc\">\n                  <div>Recommended Stop & Loss - {strategyDetail.stop_loss}%</div>\n                  <div className=\"d-flex align-items-center gap-2\">\n                    {/*<img src={GoogleIcon} alt=\"google\" /> */}\n                    {strategyDetail.asset_name}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"tradeHistory-right\">\n              <div className=\"right-sideBG\">\n                <div className=\"tradeHistory-rightBtn\">\n                  {followed ? (\n                    <FormButton onClick={() => handleUnfollowClick()}>Unfollow</FormButton>\n                  ) : (\n                    <FormButton onClick={() => handleFollowClick()}>Follow</FormButton>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </StyledDetailPageHeader>\n\n        <div className=\"overview-pnlCurve\">\n          <Overview strategyDetail={strategyDetail} />\n          <PnlCurve />\n        </div>\n        <StyledTradeHistoryDataTable>\n          <div className=\"section-title\">Open Trades</div>\n          <HistoryDataTable apiEndpoints=\"api/v1/trades/open\" category=\"open\" />\n        </StyledTradeHistoryDataTable>\n        <StyledTradeHistoryDataTable>\n          <div className=\"section-title\">Close Trades</div>\n          <HistoryDataTable apiEndpoints=\"api/v1/trades/close\" category=\"close\" />\n        </StyledTradeHistoryDataTable>\n      </StyledDetailPage>\n    </>\n  );\n};\n\nexport default TradeHistory;\n","import styled from 'styled-components';\nimport TitleBG from '../../Assets/Dashboard/TitleBG.png';\nimport TradeHistoryBG from '../../Assets/Dashboard/TradeHistoryBG.png';\n\nexport const StyledDashboard = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  .welcome-title {\n    border-radius: 14px;\n    // background: linear-gradient(0deg, rgba(199, 215, 248, 0.06) 0%, rgba(199, 215, 248, 0.06) 100%),\n    //   url(${TitleBG});\n    background: linear-gradient(\n        90deg,\n        rgba(29, 30, 32, 0.2) -2.2%,\n        #1d1e20 85%,\n        rgba(29, 30, 32, 0.2) 100%\n      ),\n      url(${TitleBG});\n    padding: 24px 20px;\n    font-size: 20px;\n    background-repeat: no-repeat;\n    background-position: right;\n  }\n`;\n\nexport const SyledDashboardSections = styled.section`\n  display: flex;\n  flex-direction: column;\n  padding: 32px 24px;\n  border-radius: 14px;\n  gap: 16px;\n  background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n    #121212;\n\n  .section-title-allBtn {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    .section-title {\n      font-size: 20px;\n    }\n    .section-allBtn-main {\n      display: flex;\n      gap: 20px;\n    }\n    .section-allBtn {\n      color: #b68bf7;\n      text-decoration: underline;\n      cursor: pointer;\n    }\n  }\n\n  .alert-boxes {\n    display: flex;\n    align-items: center;\n    /* justify-content: space-between; */\n    gap: 10px;\n    overflow: auto;\n\n    .alert-box {\n      display: flex;\n      padding: 12px;\n      flex-direction: column;\n      justify-content: center;\n      align-items: flex-start;\n      max-width: 100%;\n      gap: 6px;\n      border-radius: 14px;\n      font-size: 14px;\n      background: linear-gradient(\n          0deg,\n          rgba(199, 215, 248, 0.08) 0%,\n          rgba(199, 215, 248, 0.08) 100%\n        ),\n        #121212;\n\n      .name {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n      }\n      .price {\n        font-weight: 600;\n      }\n      .percentage {\n        font-size: 14px;\n        color: #43a047;\n      }\n    }\n  }\n\n  .alertBoxText {\n    text-wrap: nowrap;\n  }\n  .notification-image {\n    height: 2rem;\n    border-radius: 50%;\n  }\n\n  @media (max-width: 767px) {\n    padding: 16px;\n\n    /* .alert-boxes {\n      flex-wrap: wrap;\n\n      .alert-box {\n        width: 45%;\n        align-items: center;\n      }\n    } */\n  }\n\n  @media (min-width: 768px) and (max-width: 1199px) {\n    padding: 32px 24px;\n    .alert-boxes {\n      flex-direction: row;\n    }\n  }\n`;\n\nexport const StyledMarketTable = styled.div`\n  table {\n    width: 100%;\n  }\n  th {\n    padding: 14px 12px;\n    font-weight: 400;\n  }\n  td {\n    padding: 14px 12px;\n  }\n  td,\n  th {\n    &:first-child {\n      min-width: 240px;\n    }\n  }\n\n  .performnce-chart {\n    height: 60px !important;\n    width: 160px !important;\n  }\n\n  tr {\n    border-bottom: 1px solid rgba(255, 255, 255, 0.04);\n\n    @media (max-width: 767px) {\n      td,\n      th {\n        &:first-child {\n          min-width: 150px;\n          position: sticky;\n          left: 0;\n          background: linear-gradient(\n              0deg,\n              rgba(199, 215, 248, 0.08) 0%,\n              rgba(199, 215, 248, 0.08) 100%\n            ),\n            #121212;\n        }\n\n        &:last-child {\n          display: none;\n        }\n      }\n    }\n  }\n  .table-header {\n    height: 52px;\n    border-radius: 4px 0px;\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.08) 0%, rgba(199, 215, 248, 0.08) 100%),\n      #121212;\n    box-shadow: 0px 2px 12px 0px rgba(0, 0, 0, 0.06);\n  }\n  .asset-image {\n    background: #ffffff;\n    color: #000000;\n    width: 55px;\n    height: 55px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    overflow: hidden;\n  }\n\n  .stock-desc {\n    .stock-name {\n      color: rgba(255, 255, 255, 0.8);\n    }\n    .stock-company {\n      font-size: 12px;\n    }\n  }\n\n  .change-value {\n    color: #43a047;\n  }\n\n  .action-value {\n    color: #b68bf7;\n    text-decoration: underline;\n  }\n\n  @media (max-width: 767px) {\n    overflow: auto;\n\n    .table-header {\n      font-size: 14px;\n    }\n    .table-content {\n      font-size: 12px;\n    }\n\n    th {\n      padding: 16px 22px;\n    }\n\n    td {\n      padding: 8px;\n    }\n    .asset-image {\n      width: 40px;\n      height: 40px;\n      padding: 3px;\n    }\n\n    .stock-desc {\n      .stock-name {\n        font-size: 12px;\n      }\n      .stock-company {\n        font-size: 10px;\n      }\n    }\n  }\n  @media (min-width: 768px) and (max-width: 1199px) {\n    td,\n    th {\n      padding: 14px 8px;\n      font-size: 14px;\n      &:first-child {\n        min-width: 200px;\n      }\n    }\n  }\n`;\n\nexport const StyledDetailPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  .table-content {\n    background: #191a1b;\n  }\n\n  .section-title {\n    font-size: 24px;\n\n    @media (max-width: 767px) {\n      font-size: 20px;\n    }\n  }\n\n  .overview-pnlCurve {\n    display: flex;\n    justify-content: space-between;\n    gap: 20px;\n\n    @media (max-width: 767px) {\n      flex-direction: column;\n    }\n  }\n`;\n\nexport const StyledDetailPageHeader = styled.section`\n  .viewAll-head {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-radius: 14px;\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n      #121212;\n    padding: 45px 24px;\n  }\n  .viewAll-left {\n    display: flex;\n    align-items: center;\n    gap: 24px;\n  }\n  .viewAll-content {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n  .viewAll-title {\n    font-size: 24px;\n  }\n  .viewAll-desc {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n  }\n\n  .tradeHistory-head {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-radius: 14px;\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n      #121212;\n  }\n  .tradeHistory-left {\n    display: flex;\n    align-items: center;\n    padding: 45px 24px;\n  }\n  .tradeHistory-right {\n    width: 50%;\n    height: 160px;\n  }\n  .right-sideBG {\n    background: url(${TradeHistoryBG}) no-repeat;\n    background-size: contain;\n    background-position: right;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: end;\n  }\n  .tradeHistory-rightBtn {\n    margin: 0 24px;\n  }\n\n  @media (max-width: 767px) {\n    .viewAll-head {\n      padding: 25px 12px;\n    }\n    .viewAll-title {\n      font-size: 18px;\n    }\n    .viewAll-desc {\n      font-size: 14px;\n      flex-direction: column;\n    }\n    .viewAll-content {\n      align-items: center;\n    }\n    .tradeHistory-head {\n      flex-direction: column;\n    }\n    .tradeHistory-left {\n      padding: 25px 12px;\n    }\n    .tradeHistory-right {\n      width: 100%;\n      height: 80px;\n    }\n    .right-sideBG {\n      justify-content: center;\n    }\n  }\n\n  @media (min-width: 768px) and (max-width: 990px) {\n    .viewAll-desc {\n      flex-direction: column;\n    }\n    .viewAll-title {\n      font-size: 20px;\n    }\n    .viewAll-desc {\n      font-size: 14px;\n    }\n    .tradeHistory-left {\n      padding: 12px 24px;\n      width: 100%;\n    }\n    .tradeHistory-right {\n      width: 100%;\n      height: 140px;\n    }\n  }\n`;\n"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","convertToTitleCase","inputString","words","split","map","join","BreadCrumb","pathnames","useLocation","pathname","filter","x","_jsxs","StyledBreadCrumb","children","Link","to","className","_jsx","name","index","length","StyledTradeHistoryOverview","styled","section","_templateObject","_taggedTemplateLiteral","StyledTradeHistoryPnlCurve","_templateObject2","StyledTradeHistoryDataTable","_templateObject3","_ref","_strategyDetail$curre","strategyDetail","initialBalance","initial_balance","diff","current_balance","ROI","toFixed","strategyDetailCurrency","currency","_Fragment","concat","isNaN","parseFloat","drawdown","profit_percentage","timeframe","profit_factor","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","historicalChartData","closeTradeChartData","strategyData","closeTradeData","dataPoint","percentage","historicalData","amount","totalCloseTrade","reduce","acc","val","totalHistorical","closeTradePercentage","value","_ref2","historicalPercentage","_ref3","amounts","formattedAmounts","Number","date","labels","i","push","data","datasets","fill","label","strategy_name","borderColor","backgroundColor","ticker_symbol","options","responsive","plugins","legend","position","title","display","text","scales","y","ticks","min","Math","max","style","width","height","justifyContent","alignItems","Line","PnlCurve","stockDetailId","useParams","setHistoricalChartData","useState","setCloseTradeChartData","setStrategyData","currentDate","moment","endDate","subtract","format","startDate","fetchCloseTradeData","async","_Object$entries","responseData","apiRequest","strategy_id","filteredTrades","trade","closeDate","Date","close_time","sumByDate","item","profit_loss","open","open_price","close","close_price","resultInPercentage","aggregatedData","Object","entries","sum","fetchHistoricalTradeData","reverse","error","console","log","_responseData$data","start_date","end_date","useEffect","id","fetchStrategyDetail","PnlGraph","apiEndpoints","category","tradeData","setTradeData","page","setPage","perPage","setPerPage","totalRows","setTotalRows","fetchStockListWithYahooData","limit","_responseData$data2","updatedStockList","Promise","all","yahooData","tickerSymbol","price","fetchYahooData","asset","regularMarketPrice","meta","total","formatTime","timeString","utc","renderNetPL","row","action","lot_size","columns","selector","open_time","netPL","undefined","DataTable","defaultSortFieldId","pagination","paginationServer","paginationTotalRows","onChangeRowsPerPage","newPerPage","onChangePage","newPage","noDataComponent","TradeHistory","setStrategyDetail","loading","setLoading","followed","setFollowed","is_followed","StyledDetailPage","StyledDetailPageHeader","stop_loss","asset_name","FormButton","onClick","Swal","fire","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","toast","message","handleUnfollowClick","handleFollowClick","Overview","HistoryDataTable","StyledDashboard","div","TitleBG","SyledDashboardSections","StyledMarketTable","_templateObject4","_templateObject5"],"sourceRoot":""}