{"version":3,"file":"static/js/567.997b3fc7.chunk.js","mappings":"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","sources":["Components/Common/BreadCrumb/BreadCrumb.js","Styles/Pages/Strategies.js","Components/Strategies/StrategyGraph.js","Components/Strategies/StrategiesCard.js","Pages/Strategies/Strategies.js","Styles/Pages/Dashboard.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { StyledBreadCrumb } from '../../../Styles/Components/Common';\n\nconst BreadCrumb = () => {\n  const location = useLocation();\n  const pathnames = location.pathname.split('/').filter((x) => x);\n\n  return (\n    <StyledBreadCrumb>\n      <Link to=\"/\" className=\"breadcrumb-link\">\n        Home <span className=\"mx-2\">/</span>\n      </Link>\n      {pathnames.map((name, index) => {\n        // const routeTo = `/${pathnames.slice(0, index + 1).join('/')}`;\n        const isLast = index === pathnames.length - 1;\n\n        return isLast ? (\n          <span key={index} className=\"breadcrumb-text\">\n            {/*<Link to={routeTo} className=\"breadcrumb-link\">*/}\n            {/*{capitalizeFirstLetter(name)}*/}\n            {/*</Link>*/}\n          </span>\n        ) : (\n          <span key={index}>\n            {/*<Link to={routeTo} className=\"breadcrumb-link\">*/}\n            {convertToTitleCase(name)}\n            {/*</Link>{' '}*/}\n          </span>\n        );\n      })}\n    </StyledBreadCrumb>\n  );\n};\n\nconst capitalizeFirstLetter = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nconst convertToTitleCase = (inputString) => {\n  let words = inputString.split('-');\n  words = words.map(capitalizeFirstLetter);\n  let resultString = words.join(' ');\n  return resultString;\n};\n\nexport default BreadCrumb;\n","import styled from 'styled-components';\n\nexport const StyledStrategies = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  padding: 32px 24px;\n  border-radius: 14px;\n  background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n    #121212;\n\n  .strategy-title {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n\n    .stock-name {\n      font-size: 24px;\n      font-weight: 600;\n    }\n    .stock-company-name {\n      color: rgba(255, 255, 255, 0.72);\n    }\n  }\n\n  .strategy-list {\n    display: flex;\n    justify-content: start;\n    flex-wrap: wrap;\n    gap: 20px;\n  }\n`;\n\nexport const StyledStrategiesCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 24px 16px;\n  border-radius: 14px;\n  background: linear-gradient(0deg, rgba(199, 215, 248, 0.06) 0%, rgba(199, 215, 248, 0.06) 100%),\n    #121212;\n  box-shadow: 0px 4px 14px 0px rgba(0, 0, 0, 0.16);\n\n  .strategyCard-head {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n\n    .strategyCard-head-title {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n\n      .strategyCard-title-quant {\n        color: #efe6fd;\n        font-size: 20px;\n        padding: 6px 12px;\n        border-radius: 4px;\n        background: rgba(96, 2, 238, 0.2);\n      }\n      .strategyCard-title-name {\n        color: rgba(255, 255, 255, 0.7);\n        font-size: 14px;\n      }\n    }\n    .strategyCard-head-desc {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 35px;\n\n      .strategyCard-desc-detail {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n        .strategyCard-desc-detail-roc {\n          color: rgba(255, 255, 255, 0.8);\n          font-size: 12px;\n        }\n        .strategyCard-desc-detail-value {\n          color: #43a047;\n          font-size: 24px;\n        }\n\n        .green-text {\n          color: #43a047;\n        }\n        .red-text {\n          color: red;\n        }\n      }\n    }\n    .strategyCard-desc-chart {\n      width: 60% !important;\n      /* height: auto; */\n    }\n    .strategy-performence-graph {\n      width: 100%;\n      height: 5rem !important;\n    }\n  }\n\n  .strategyCard-desc {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: rgba(255, 255, 255, 0.6);\n    font-size: 14px;\n\n    .strategyCard-desc-value {\n      color: #fff;\n    }\n  }\n\n  .strategyCard-btn {\n    display: flex;\n    justify-content: end;\n  }\n\n  @media (min-width: 991px) and (max-width: 1199px) {\n    padding: 24px 12px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport apiRequest from '../../api/api';\nimport moment from 'moment';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend\n);\n\nconst StrategyGraph = ({ strategy }) => {\n  const [chartdata, setChartdata] = useState([]);\n  const fetchCloseTradeData = async () => {\n    try {\n      const { responseData } = await apiRequest('api/v1/trades/close/all', 'POST', {\n        strategy_id: strategy._id\n      });\n      const data = responseData.data;\n\n      // setTradeDate({ startDate: formattedMinDate, endDate: formattedMaxDate });\n      const closeTradePnL = data?.map((item) => {\n        return {\n          date: item.close_time,\n          amount: item.profit_loss\n        };\n      });\n\n      const sumByDate = closeTradePnL.reduce((acc, trade) => {\n        const currentDate = moment(trade.date).format('YYYY-MM-DD');\n\n        // If the currentDate already exists in the accumulator, add the profit/loss to its sum\n        if (acc[currentDate]) {\n          acc[currentDate] += trade.amount;\n        } else {\n          // Otherwise, initialize the sum for the currentDate\n          acc[currentDate] = trade.amount;\n        }\n\n        return acc;\n      }, {});\n      const aggregatedData = Object.entries(sumByDate)?.map(([date, sum]) => ({\n        date,\n        amount: sum\n      }));\n      setChartdata(aggregatedData.reverse());\n    } catch (error) {\n      console.log('Error occured while fetching close trade data');\n    }\n  };\n\n  useEffect(() => {\n    fetchCloseTradeData();\n  }, []);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        display: false // Hide x axis\n      },\n      y: {\n        display: false // Hide y axis\n      }\n    }\n  };\n\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n  //   const dataPoints = [65, 59, 80, 81, 56, 55, 140];\n  const dataPoints = chartdata?.map((data) => data.amount?.toFixed(2));\n  const data = {\n    labels,\n    datasets: [\n      {\n        fill: true,\n        label: 'Dataset 2',\n        data: dataPoints,\n        borderColor: 'rgb(67, 160, 71)',\n        backgroundColor: 'rgba(67, 160, 71, 0.1)',\n        pointRadius: 0\n      }\n    ]\n  };\n  return <Line options={options} data={data} className=\"strategy-performence-graph\" />;\n};\n\nexport default StrategyGraph;\n","import React, { useState } from 'react';\nimport { StyledStrategiesCard } from '../../Styles/Pages/Strategies';\n// import chart from '../../Assets/Dashboard/Performance.png';\nimport FormButton from '../Common/Form/FormButton';\nimport apiRequest from '../../api/api';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport StrategyGraph from './StrategyGraph';\n\nconst StrategiesCard = ({ strategy }) => {\n  const [followed, setFollowed] = useState(() => {\n    return strategy.is_followed === 1 ? true : false;\n  });\n\n  const handleFollowClick = async () => {\n    const result = await Swal.fire({\n      title: 'Confirm Follow',\n      text: 'Are you sure you want to follow this strategy?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, follow!',\n      cancelButtonText: 'No, cancel'\n    });\n\n    if (result.isConfirmed) {\n      try {\n        await apiRequest('api/v1/follow-strategy', 'POST', {\n          strategy_id: strategy._id\n        });\n        setFollowed(true);\n        window.location.href = `/strategy-detail/${strategy._id}`;\n      } catch (error) {\n        console.error('Error occured while following strategy:', error);\n      }\n    }\n  };\n\n  const handleUnfollowClick = async () => {\n    const result = await Swal.fire({\n      title: 'Confirm Unfollow',\n      text: 'Are you sure you want to unfollow this strategy?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, unfollow!',\n      cancelButtonText: 'No, cancel'\n    });\n\n    if (result.isConfirmed) {\n      try {\n        const { responseData } = await apiRequest('api/v1/unfollow-strategy', 'POST', {\n          strategy_id: strategy._id\n        });\n        setFollowed(false);\n        toast(responseData.meta.message);\n      } catch (error) {\n        console.error('Error occured while unfollowing strategy:', error);\n      }\n    }\n  };\n\n  const initialBalance = strategy.initial_balance;\n  const currentBalance = strategy.current_balance;\n  const diff = currentBalance - initialBalance;\n  const ROI = ((diff * 100) / initialBalance).toFixed(2);\n\n  return (\n    <>\n      <StyledStrategiesCard>\n        <Link to={`/strategy-detail/${strategy._id}`} style={{ display: 'contents' }}>\n          <div className=\"strategyCard-head\">\n            <div className=\"strategyCard-head-title\">\n              <div className=\"strategyCard-title-quant\">Quant11</div>\n              <div className=\"strategyCard-title-name\">{strategy.strategy_name}</div>\n            </div>\n            <div className=\"strategyCard-head-desc\">\n              <div className=\"strategyCard-desc-detail\">\n                <div className=\"strategyCard-desc-detail-roc\">ROI</div>\n                <div\n                  className={`strategyCard-desc-detail-value ${\n                    diff <= 0 ? 'red-text' : 'green-text'\n                  }`}>\n                  {ROI + '%'}\n                </div>\n              </div>\n              <div className=\"strategyCard-desc-chart\">\n                {/* <img src={chart} alt=\"chart\" /> */}\n                <StrategyGraph strategy={strategy} />\n              </div>\n            </div>\n          </div>\n          <div className=\"strategyCard-desc\">\n            <div className=\"d-flex flex-column gap-2\">\n              <div>\n                Max DowDown:\n                <span className=\"strategyCard-desc-value red-text\"> {strategy.drawdown}%</span>\n              </div>\n              <div>\n                Win Rate:\n                <span className=\"strategyCard-desc-value\"> {strategy.profit_percentage}%</span>\n              </div>\n              <div>\n                Profit Factor:\n                <span className=\"strategyCard-desc-value\"> {strategy.profit_factor}</span>\n              </div>\n            </div>\n            <div>\n              <div>\n                Time Frame: <span className=\"strategyCard-desc-value\"> {strategy.timeframe}</span>\n              </div>\n            </div>\n          </div>\n        </Link>\n        <div className=\"strategyCard-btn\">\n          {followed ? (\n            <FormButton onClick={() => handleUnfollowClick()}>Unfollow</FormButton>\n          ) : (\n            <FormButton onClick={() => handleFollowClick()}>Follow</FormButton>\n          )}\n        </div>\n      </StyledStrategiesCard>\n    </>\n  );\n};\n\nexport default StrategiesCard;\n","import React, { useEffect, useRef, useState } from 'react';\nimport BreadCrumb from '../../Components/Common/BreadCrumb/BreadCrumb';\nimport { StyledDetailPage, StyledDetailPageHeader } from '../../Styles/Pages/Dashboard';\nimport StrategyHeadBG from '../../Assets/Dashboard/StrategyHeadBG.png';\nimport { StyledStrategies } from '../../Styles/Pages/Strategies';\nimport StrategiesCard from '../../Components/Strategies/StrategiesCard';\nimport apiRequest from '../../api/api';\nimport { useParams } from 'react-router-dom';\n\nconst Strategies = () => {\n  const { stockId } = useParams();\n  const [strategiesList, setStrategiesList] = useState([]);\n  const [strategyName, setStrategyName] = useState(null);\n  const [tickerName, setTickerName] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const loaderRef = useRef(null);\n\n  useEffect(() => {\n    const fetchStrategiesList = async () => {\n      if (loading || !hasMore) return;\n      setLoading(true);\n      try {\n        const { responseData } = await apiRequest('api/v1/assets/strategies', 'POST', {\n          id: stockId,\n          page: page,\n          limit: 5\n        });\n        if (responseData.data.values.length > 0) {\n          const strategy = responseData.data;\n          setStrategiesList((prevList) => [...prevList, ...strategy.values]);\n          setStrategyName(strategy.asset_name);\n          setTickerName(strategy.ticker_symbol);\n          setPage((prevPage) => prevPage + 1);\n        } else {\n          setHasMore(false);\n        }\n      } catch (error) {\n        console.error('Error fetching stock data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const handleIntersect = (entries) => {\n      if (entries[0].isIntersecting) {\n        fetchStrategiesList();\n      }\n    };\n\n    const observer = new IntersectionObserver(handleIntersect, {\n      threshold: 1.0\n    });\n\n    if (loaderRef.current) {\n      observer.observe(loaderRef.current);\n    }\n\n    return () => {\n      if (loaderRef.current) {\n        observer.unobserve(loaderRef.current);\n      }\n    };\n  }, [stockId, loading, hasMore, page]);\n\n  return (\n    <>\n      <StyledDetailPage>\n        <BreadCrumb />\n        <StyledDetailPageHeader>\n          <div className=\"viewAll-head\">\n            <div className=\"viewAll-left\">\n              <div className=\"viewAll-content\">\n                <div className=\"viewAll-title\">Trading strategies</div>\n                <div className=\"viewAll-desc\">Let our smart strategies work for you 24/7.</div>\n              </div>\n            </div>\n            <div className=\"viewAll-right\">\n              <img src={StrategyHeadBG} alt=\"Icon\" />\n            </div>\n          </div>\n        </StyledDetailPageHeader>\n\n        <StyledStrategies>\n          <div className=\"strategy-title\">\n            <div className=\"stock-name\">{tickerName}</div>\n            {strategyName ? <li className=\"stock-company-name\">{strategyName}</li> : ''}\n          </div>\n          <div className=\"strategy-list\">\n            {strategiesList.length > 0 ? (\n              <>\n                {strategiesList.map((strategy) => (\n                  <StrategiesCard key={strategy._id} strategy={strategy} />\n                ))}\n              </>\n            ) : (\n              <p>No Strategies</p>\n            )}\n            <div ref={loaderRef}></div>\n          </div>\n        </StyledStrategies>\n      </StyledDetailPage>\n    </>\n  );\n};\n\nexport default Strategies;\n","import styled from 'styled-components';\nimport TitleBG from '../../Assets/Dashboard/TitleBG.png';\nimport TradeHistoryBG from '../../Assets/Dashboard/TradeHistoryBG.png';\n\nexport const StyledDashboard = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  .welcome-title {\n    border-radius: 14px;\n    // background: linear-gradient(0deg, rgba(199, 215, 248, 0.06) 0%, rgba(199, 215, 248, 0.06) 100%),\n    //   url(${TitleBG});\n    background: linear-gradient(\n        90deg,\n        rgba(29, 30, 32, 0.2) -2.2%,\n        #1d1e20 85%,\n        rgba(29, 30, 32, 0.2) 100%\n      ),\n      url(${TitleBG});\n    padding: 24px 20px;\n    font-size: 20px;\n    background-repeat: no-repeat;\n    background-position: right;\n  }\n`;\n\nexport const SyledDashboardSections = styled.section`\n  display: flex;\n  flex-direction: column;\n  padding: 32px 24px;\n  border-radius: 14px;\n  gap: 16px;\n  background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n    #121212;\n\n  .section-title-allBtn {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    .section-title {\n      font-size: 20px;\n    }\n    .section-allBtn-main {\n      display: flex;\n      gap: 20px;\n    }\n    .section-allBtn {\n      color: #b68bf7;\n      text-decoration: underline;\n      cursor: pointer;\n    }\n  }\n\n  .alert-boxes {\n    display: flex;\n    align-items: center;\n    /* justify-content: space-between; */\n    gap: 10px;\n    overflow: auto;\n\n    .alert-box {\n      display: flex;\n      padding: 12px;\n      flex-direction: column;\n      justify-content: center;\n      align-items: flex-start;\n      max-width: 100%;\n      gap: 6px;\n      border-radius: 14px;\n      font-size: 14px;\n      background: linear-gradient(\n          0deg,\n          rgba(199, 215, 248, 0.08) 0%,\n          rgba(199, 215, 248, 0.08) 100%\n        ),\n        #121212;\n\n      .name {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n      }\n      .price {\n        font-weight: 600;\n      }\n      .percentage {\n        font-size: 14px;\n        color: #43a047;\n      }\n    }\n  }\n\n  .alertBoxText {\n    text-wrap: nowrap;\n  }\n  .notification-image {\n    height: 2rem;\n    border-radius: 50%;\n  }\n\n  @media (max-width: 767px) {\n    padding: 16px;\n\n    /* .alert-boxes {\n      flex-wrap: wrap;\n\n      .alert-box {\n        width: 45%;\n        align-items: center;\n      }\n    } */\n  }\n\n  @media (min-width: 768px) and (max-width: 1199px) {\n    padding: 32px 24px;\n    .alert-boxes {\n      flex-direction: row;\n    }\n  }\n`;\n\nexport const StyledMarketTable = styled.div`\n  table {\n    width: 100%;\n  }\n  th {\n    padding: 14px 12px;\n    font-weight: 400;\n  }\n  td {\n    padding: 14px 12px;\n  }\n  td,\n  th {\n    &:first-child {\n      min-width: 240px;\n    }\n  }\n\n  .performnce-chart {\n    height: 60px !important;\n    width: 160px !important;\n  }\n\n  tr {\n    border-bottom: 1px solid rgba(255, 255, 255, 0.04);\n\n    @media (max-width: 767px) {\n      td,\n      th {\n        &:first-child {\n          min-width: 150px;\n          position: sticky;\n          left: 0;\n          background: linear-gradient(\n              0deg,\n              rgba(199, 215, 248, 0.08) 0%,\n              rgba(199, 215, 248, 0.08) 100%\n            ),\n            #121212;\n        }\n\n        &:last-child {\n          display: none;\n        }\n      }\n    }\n  }\n  .table-header {\n    height: 52px;\n    border-radius: 4px 0px;\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.08) 0%, rgba(199, 215, 248, 0.08) 100%),\n      #121212;\n    box-shadow: 0px 2px 12px 0px rgba(0, 0, 0, 0.06);\n  }\n  .asset-image {\n    background: #ffffff;\n    color: #000000;\n    width: 55px;\n    height: 55px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    overflow: hidden;\n  }\n\n  .stock-desc {\n    .stock-name {\n      color: rgba(255, 255, 255, 0.8);\n    }\n    .stock-company {\n      font-size: 12px;\n    }\n  }\n\n  .change-value {\n    color: #43a047;\n  }\n\n  .action-value {\n    color: #b68bf7;\n    text-decoration: underline;\n  }\n\n  @media (max-width: 767px) {\n    overflow: auto;\n\n    .table-header {\n      font-size: 14px;\n    }\n    .table-content {\n      font-size: 12px;\n    }\n\n    th {\n      padding: 16px 22px;\n    }\n\n    td {\n      padding: 8px;\n    }\n    .asset-image {\n      width: 40px;\n      height: 40px;\n      padding: 3px;\n    }\n\n    .stock-desc {\n      .stock-name {\n        font-size: 12px;\n      }\n      .stock-company {\n        font-size: 10px;\n      }\n    }\n  }\n  @media (min-width: 768px) and (max-width: 1199px) {\n    td,\n    th {\n      padding: 14px 8px;\n      font-size: 14px;\n      &:first-child {\n        min-width: 200px;\n      }\n    }\n  }\n`;\n\nexport const StyledDetailPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  .table-content {\n    background: #191a1b;\n  }\n\n  .section-title {\n    font-size: 24px;\n\n    @media (max-width: 767px) {\n      font-size: 20px;\n    }\n  }\n\n  .overview-pnlCurve {\n    display: flex;\n    justify-content: space-between;\n    gap: 20px;\n\n    @media (max-width: 767px) {\n      flex-direction: column;\n    }\n  }\n`;\n\nexport const StyledDetailPageHeader = styled.section`\n  .viewAll-head {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-radius: 14px;\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n      #121212;\n    padding: 45px 24px;\n  }\n  .viewAll-left {\n    display: flex;\n    align-items: center;\n    gap: 24px;\n  }\n  .viewAll-content {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n  .viewAll-title {\n    font-size: 24px;\n  }\n  .viewAll-desc {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n  }\n\n  .tradeHistory-head {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-radius: 14px;\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n      #121212;\n  }\n  .tradeHistory-left {\n    display: flex;\n    align-items: center;\n    padding: 45px 24px;\n  }\n  .tradeHistory-right {\n    width: 50%;\n    height: 160px;\n  }\n  .right-sideBG {\n    background: url(${TradeHistoryBG}) no-repeat;\n    background-size: contain;\n    background-position: right;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: end;\n  }\n  .tradeHistory-rightBtn {\n    margin: 0 24px;\n  }\n\n  @media (max-width: 767px) {\n    .viewAll-head {\n      padding: 25px 12px;\n    }\n    .viewAll-title {\n      font-size: 18px;\n    }\n    .viewAll-desc {\n      font-size: 14px;\n      flex-direction: column;\n    }\n    .viewAll-content {\n      align-items: center;\n    }\n    .tradeHistory-head {\n      flex-direction: column;\n    }\n    .tradeHistory-left {\n      padding: 25px 12px;\n    }\n    .tradeHistory-right {\n      width: 100%;\n      height: 80px;\n    }\n    .right-sideBG {\n      justify-content: center;\n    }\n  }\n\n  @media (min-width: 768px) and (max-width: 990px) {\n    .viewAll-desc {\n      flex-direction: column;\n    }\n    .viewAll-title {\n      font-size: 20px;\n    }\n    .viewAll-desc {\n      font-size: 14px;\n    }\n    .tradeHistory-left {\n      padding: 12px 24px;\n      width: 100%;\n    }\n    .tradeHistory-right {\n      width: 100%;\n      height: 140px;\n    }\n  }\n`;\n"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","convertToTitleCase","inputString","words","split","map","join","BreadCrumb","pathnames","useLocation","pathname","filter","x","_jsxs","StyledBreadCrumb","children","Link","to","className","_jsx","name","index","length","StyledStrategies","styled","section","_templateObject","_taggedTemplateLiteral","StyledStrategiesCard","div","_templateObject2","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Legend","_ref","strategy","chartdata","setChartdata","useState","useEffect","async","_Object$entries","responseData","apiRequest","strategy_id","_id","data","sumByDate","item","date","close_time","amount","profit_loss","reduce","acc","trade","currentDate","moment","format","aggregatedData","Object","entries","_ref2","sum","reverse","error","console","log","fetchCloseTradeData","dataPoints","_data$amount","toFixed","labels","datasets","fill","label","borderColor","backgroundColor","pointRadius","Line","options","responsive","plugins","legend","display","title","scales","y","followed","setFollowed","is_followed","initialBalance","initial_balance","diff","current_balance","ROI","_Fragment","concat","style","strategy_name","StrategyGraph","drawdown","profit_percentage","profit_factor","timeframe","FormButton","onClick","Swal","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","toast","meta","message","handleUnfollowClick","window","location","href","handleFollowClick","Strategies","stockId","useParams","strategiesList","setStrategiesList","strategyName","setStrategyName","tickerName","setTickerName","loading","setLoading","page","setPage","hasMore","setHasMore","loaderRef","useRef","observer","IntersectionObserver","isIntersecting","id","limit","values","prevList","asset_name","ticker_symbol","prevPage","fetchStrategiesList","threshold","current","observe","unobserve","StyledDetailPage","StyledDetailPageHeader","src","alt","StrategiesCard","ref","StyledDashboard","TitleBG","SyledDashboardSections","StyledMarketTable","_templateObject3","_templateObject4","_templateObject5"],"sourceRoot":""}