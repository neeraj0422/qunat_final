{"version":3,"file":"static/js/804.41bd3b22.chunk.js","mappings":"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","sources":["Styles/Pages/Settings.js","Components/Settings/SettingsAccordian.js","Components/Settings/DiscreteSlider/DiscreteSlider.js","Components/Settings/ManageRiskAppetite.js","Components/Settings/ManageTradeExperience.js","Components/Settings/NotificationSettings.js","Pages/Settings/Settings.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSettings = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  width: 80%;\n  margin: auto;\n\n  .main-title {\n    font-size: 24px;\n  }\n  .setting-accordion {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 75vh;\n  }\n  .setting-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n  .tag-line {\n    color: rgba(255, 255, 255, 0.9);\n    font-size: 14px;\n    margin: 10px 0;\n  }\n\n  .setting-button {\n    margin: 20px 0;\n    width: fit-content;\n    padding: 14px 30px;\n    border-radius: 4px;\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.14) 0%, rgba(199, 215, 248, 0.14) 100%),\n      #121212;\n    cursor: pointer;\n  }\n\n  @media (max-width: 767px) {\n    .tag-line {\n      font-size: 12px;\n    }\n  }\n\n  @media (max-width: 990px) {\n    width: 100%;\n  }\n`;\n\nexport const SettingsManageRiskAppetite = styled.div`\n  .title {\n    font-size: 18px;\n  }\n\n  .risk-slider {\n    width: 50%;\n    margin: 20px;\n    position: relative;\n  }\n\n  @media (max-width: 767px) {\n    .title {\n      font-size: 14px;\n    }\n    .risk-slider {\n      width: 100%;\n      font-size: 13px;\n      margin: 0;\n    }\n  }\n  @media (min-width: 991px) and (max-width: 1199px) {\n    .risk-slider {\n      width: 70%;\n    }\n  }\n\n  input[type='range']::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 16px;\n    cursor: pointer;\n  }\n\n  input[type='range']::-moz-range-track {\n    width: 100%;\n    height: 16px;\n  }\n\n  input[type='range']::-ms-track {\n    width: 100%;\n    height: 16px;\n    cursor: pointer;\n    background: transparent;\n    border-color: transparent;\n    border-width: 16px 0;\n    color: transparent;\n  }\n\n  /* Special styling for WebKit/Blink */\n  input[type='range']::-webkit-slider-thumb {\n    width: 25px;\n    margin-top: -5px;\n    height: 25px;\n    border-radius: 50%;\n    background: #6002ee;\n    border: 3px solid #b6c2e2;\n    -webkit-appearance: none;\n  }\n\n  /* All the same stuff for Firefox */\n  input[type='range']::-moz-range-thumb {\n    margin-top: -5px;\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    background: #6002ee;\n    border: 3px solid #b6c2e2;\n    -webkit-appearance: none;\n  }\n\n  /* All the same stuff for IE */\n  input[type='range']::-ms-thumb {\n    margin-top: -5px;\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    background: #6002ee;\n    border: 3px solid #b6c2e2;\n    -webkit-appearance: none;\n  }\n`;\n\nexport const SettingsManageTradeExperience = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  .select-experience {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 80%;\n\n    .button {\n      float: left;\n      padding: 25px 0;\n      position: relative;\n    }\n\n    .button label,\n    .button input {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n    }\n\n    .button input[type='radio'] {\n      opacity: 0.011;\n      z-index: 100;\n    }\n\n    .button input[type='radio']:checked + label {\n      background: rgba(255, 114, 0, 0.1);\n      color: #ff7200;\n      //border-radius: 4px;\n    }\n\n    .button label {\n      cursor: pointer;\n      z-index: 90;\n      line-height: 1.8em;\n      color: #ffffff;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: 0;\n    }\n  }\n  .experience-box {\n    width: 170px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    color: rgba(255, 255, 255, 0.9);\n    border-radius: 4px;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n      #121212;\n  }\n\n  @media (max-width: 767px) {\n    .select-experience {\n      width: 100%;\n      gap: 5px;\n\n      .button {\n        padding: 30px 0;\n        label {\n          font-size: 12px;\n        }\n      }\n\n      .experience-box {\n        width: 100%;\n      }\n    }\n  }\n\n  @media (min-width: 768px) and (max-width: 990px) {\n    .select-experience {\n      width: 100%;\n    }\n  }\n\n  @media (min-width: 991px) and (max-width: 1199px) {\n    .select-experience {\n      width: 100%;\n      gap: 10px;\n    }\n    .button label {\n      font-size: 14px;\n    }\n  }\n`;\n\nexport const SettingsNotification = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 0;\n\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 45px;\n    height: 25px;\n  }\n\n  .switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  .slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #938f99;\n    transition: 0.4s;\n  }\n\n  .slider:before {\n    position: absolute;\n    content: '';\n    height: 21px;\n    width: 21px;\n    left: 3px;\n    bottom: 2px;\n    background-color: #6002ee;\n    transition: 0.4s;\n  }\n\n  input:checked + .slider {\n    background-color: #d0bcff;\n  }\n\n  input:focus + .slider {\n    box-shadow: 0 0 1px #d0bcff;\n  }\n\n  input:checked + .slider:before {\n    transform: translateX(18px);\n  }\n\n  /* Rounded sliders */\n  .slider.round {\n    border-radius: 34px;\n  }\n\n  .slider.round:before {\n    border-radius: 50%;\n  }\n  @media (max-width: 767px) {\n    .notification-name {\n      font-size: 14px;\n    }\n  }\n`;\n\nexport const SettingsAccordionWrapper = styled.div`\n  padding: 5px 16px;\n  border-radius: 14px;\n  border-bottom: 1px solid #222;\n  background: linear-gradient(0deg, rgba(199, 215, 248, 0.04) 0%, rgba(199, 215, 248, 0.04) 100%),\n    #121212;\n  box-shadow: 0px 4px 14px 0px rgba(0, 0, 0, 0.16);\n\n  @media (max-width: 767px) {\n    padding: 5px 10px;\n  }\n`;\nexport const SettingsAccordionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 0;\n  cursor: pointer;\n\n  @media (max-width: 767px) {\n    padding: 10px 0;\n    font-size: 14px;\n  }\n`;\nexport const SettingsAccordionTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  .round {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 32px;\n    height: 32px;\n    background: #242629;\n    border-radius: 50%;\n  }\n`;\nexport const SettingsAccordionArrow = styled.div``;\nexport const SettingsAccordionContent = styled.div`\n  padding: 16px 42px;\n  border-top: 2px solid #303132;\n\n  @media (max-width: 767px) {\n    padding: 16px 10px;\n  }\n  @media (min-width: 991px) and (max-width: 1199px) {\n    padding: 16px;\n  }\n`;\n","import React, { useState } from 'react';\nimport {\n  SettingsAccordionArrow,\n  SettingsAccordionContent,\n  SettingsAccordionHeader,\n  SettingsAccordionTitle,\n  SettingsAccordionWrapper\n} from '../../Styles/Pages/Settings';\nimport DownArrow from '../../Assets/Settings/DownArrow.png';\nimport UpArrow from '../../Assets/Settings/UpArrow.png';\n\nconst SettingsAccordian = ({ accordionTitleIcon, accordionTitle, accordionContent }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleAccordion = () => {\n    setIsOpen(!isOpen);\n  };\n  return (\n    <>\n      <SettingsAccordionWrapper>\n        <SettingsAccordionHeader onClick={toggleAccordion}>\n          <SettingsAccordionTitle>\n            <div className=\"round\">\n              <div>\n                <img src={accordionTitleIcon} alt=\"icon\" />\n              </div>\n            </div>\n            {accordionTitle}\n          </SettingsAccordionTitle>\n          <SettingsAccordionArrow>\n            <img src={isOpen ? UpArrow : DownArrow} alt={isOpen ? 'downArrow' : 'upArrow'} />\n          </SettingsAccordionArrow>\n        </SettingsAccordionHeader>\n\n        {isOpen && <SettingsAccordionContent>{accordionContent}</SettingsAccordionContent>}\n      </SettingsAccordionWrapper>\n    </>\n  );\n};\n\nexport default SettingsAccordian;\n","import React, { useState } from 'react';\n\nconst marks = [\n  { value: 0, label: 'Low risk' },\n  { value: 50, label: 'Medium risk' },\n  { value: 100, label: 'High risk' }\n];\n\nconst DiscreteSlider = ({ defaultValue, onChange }) => {\n  const [sliderValue, setSliderValue] = useState(defaultValue);\n\n  const handleSliderChange = (event) => {\n    const newValue = parseInt(event.target.value, 10);\n    const closestMark = marks.reduce((prev, curr) =>\n      Math.abs(curr.value - newValue) < Math.abs(prev.value - newValue) ? curr : prev\n    );\n\n    setSliderValue(closestMark.value);\n    onChange(closestMark.value);\n  };\n\n  return (\n    <div className=\"risk-slider\">\n      <div\n        className=\"d-flex align-items-center justify-content-between pb-4\"\n        style={{ fontFamily: 'PlusJakartaSansRegular' }}>\n        <div>Low Risk</div>\n        <div>Medium Risk</div>\n        <div>High Risk</div>\n      </div>\n      {/*<span style={{ display: 'block', textAlign: 'center', margin: '10px 0' }}>*/}\n      {/*  {valuetext(sliderValue)}*/}\n      {/*</span>*/}\n      <div style={{ position: 'relative' }}>\n        <input\n          type=\"range\"\n          min={marks[0].value}\n          max={marks[marks.length - 1].value}\n          step={1}\n          value={sliderValue}\n          onChange={handleSliderChange}\n          style={{\n            width: '100%',\n            borderRadius: '100px',\n            background:\n              'linear-gradient(90deg, #1F87FE 12.68%, #43A047 34.23%, #FF7200 75.37%, #C21C1D 99.64%)',\n            border: 'none',\n            appearance: 'none',\n            WebkitAppearance: 'none',\n            MozAppearance: 'none',\n            outline: 'none'\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default DiscreteSlider;\n","// import { useEffect } from 'react';\nimport { SettingsManageRiskAppetite } from '../../Styles/Pages/Settings';\nimport DiscreteSlider from './DiscreteSlider/DiscreteSlider';\n\nconst ManageRiskAppetite = ({ settingData, setSettingData }) => {\n  const handleSliderChange = (newValue) => {\n    const riskAppetite = newValue === 0 ? 1 : newValue === 50 ? 2 : 3;\n    setSettingData((prev) => ({ ...prev, risk_appetite: riskAppetite }));\n  };\n\n  let newRiskAppetiteData =\n    Number(settingData.risk_appetite) === 1\n      ? 0\n      : Number(settingData.risk_appetite) === 2\n        ? 50\n        : 100;\n\n  return (\n    <>\n      <SettingsManageRiskAppetite>\n        <div className=\"title\">Select your Risk Appetite</div>\n        <div className=\"tag-line\">\n          Understand your risk tolerance and investment preference to tailor your trading\n          experience.\n        </div>\n        <div className=\"mt-4 mt-md-5\">\n          <DiscreteSlider\n            min={0}\n            max={100}\n            step={null}\n            value={newRiskAppetiteData}\n            onChange={handleSliderChange}\n            defaultValue={newRiskAppetiteData}\n          />\n        </div>\n      </SettingsManageRiskAppetite>\n    </>\n  );\n};\n\nexport default ManageRiskAppetite;\n","import { SettingsManageTradeExperience } from '../../Styles/Pages/Settings';\n\nconst ManageTradeExperience = ({ settingData, setSettingData }) => {\n  const handleTradeExperienceChange = (e) => {\n    setSettingData((prev) => ({ ...prev, trade_experience: e.target.value }));\n  };\n\n  return (\n    <>\n      <SettingsManageTradeExperience>\n        <div className=\"tag-line\">How much experience do you have with investing?</div>\n        <div className=\"d-flex flex-column gap-2\">\n          <div className=\"select-experience\">\n            <div className=\"button experience-box\">\n              <input\n                type=\"radio\"\n                id=\"lessThanOne\"\n                name=\"select-experience\"\n                value={1}\n                checked={Number(settingData.trade_experience) === 1}\n                onChange={handleTradeExperienceChange}\n              />\n              <label className=\"btn btn-default risk-low\" htmlFor=\"lessThanOne\">\n                Less than 1 year\n              </label>\n            </div>\n            <div className=\"button experience-box\">\n              <input\n                type=\"radio\"\n                id=\"oneToThree\"\n                name=\"select-experience\"\n                value={2}\n                checked={Number(settingData.trade_experience) === 2}\n                onChange={handleTradeExperienceChange}\n              />\n              <label className=\"btn btn-default risk-low\" htmlFor=\"oneToThree\">\n                1-3 year\n              </label>\n            </div>\n            <div className=\"button experience-box\">\n              <input\n                type=\"radio\"\n                id=\"threeToFive\"\n                name=\"select-experience\"\n                value={3}\n                checked={Number(settingData.trade_experience) === 3}\n                onChange={handleTradeExperienceChange}\n              />\n              <label className=\"btn btn-default risk-low\" htmlFor=\"threeToFive\">\n                3-5 year\n              </label>\n            </div>\n          </div>\n          <div className=\"select-experience\">\n            <div className=\"button experience-box\">\n              <input\n                type=\"radio\"\n                id=\"fiveToTen\"\n                name=\"select-experience\"\n                value={4}\n                checked={Number(settingData.trade_experience) === 4}\n                onChange={handleTradeExperienceChange}\n              />\n              <label className=\"btn btn-default risk-low\" htmlFor=\"fiveToTen\">\n                5-10 year\n              </label>\n            </div>\n            <div className=\"button experience-box\">\n              <input\n                type=\"radio\"\n                id=\"tenToTwenty\"\n                name=\"select-experience\"\n                value={5}\n                checked={Number(settingData.trade_experience) === 5}\n                onChange={handleTradeExperienceChange}\n              />\n              <label className=\"btn btn-default risk-low\" htmlFor=\"tenToTwenty\">\n                10-20 year\n              </label>\n            </div>\n            <div className=\"button experience-box\">\n              <input\n                type=\"radio\"\n                id=\"moreThenTwenty\"\n                name=\"select-experience\"\n                value={6}\n                checked={Number(settingData.trade_experience) === 6}\n                onChange={handleTradeExperienceChange}\n              />\n              <label className=\"btn btn-default risk-low\" htmlFor=\"moreThenTwenty\">\n                More than 20 year\n              </label>\n            </div>\n          </div>\n        </div>\n      </SettingsManageTradeExperience>\n    </>\n  );\n};\n\nexport default ManageTradeExperience;\n","import { SettingsNotification } from '../../Styles/Pages/Settings';\n\nconst NotificationSettings = ({ setSettingData, settingData, notificationData }) => {\n  const handleCheckboxChange = (checkboxName) => {\n    setSettingData((prevStates) => ({\n      ...prevStates,\n      [checkboxName]: !prevStates[checkboxName]\n    }));\n  };\n\n  return (\n    <>\n      <SettingsNotification>\n        <div className=\"notification-name\">App notification</div>\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            checked={settingData.app_notification}\n            onChange={() => handleCheckboxChange('app_notification')}\n          />\n          <span className=\"slider round\"></span>\n        </label>\n      </SettingsNotification>\n      <SettingsNotification>\n        <div className=\"notification-name\">Push notification</div>\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            checked={settingData.push_notification}\n            onChange={() => handleCheckboxChange('push_notification')}\n          />\n          <span className=\"slider round\"></span>\n        </label>\n      </SettingsNotification>\n      <SettingsNotification>\n        <div className=\"notification-name\">SMS notification</div>\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            checked={settingData.sms_notification}\n            onChange={() => handleCheckboxChange('sms_notification')}\n            disabled={notificationData.is_sms_notification_allowed === false}\n          />\n          <span className=\"slider round\"></span>\n        </label>\n      </SettingsNotification>\n      <SettingsNotification>\n        <div className=\"notification-name\">Email notification</div>\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            checked={settingData.email_notification}\n            onChange={() => handleCheckboxChange('email_notification')}\n            disabled={notificationData.is_email_notification_allowed === false}\n          />\n          <span className=\"slider round\"></span>\n        </label>\n      </SettingsNotification>\n    </>\n  );\n};\n\nexport default NotificationSettings;\n","import React, { useEffect, useState } from 'react';\nimport { StyledSettings } from '../../Styles/Pages/Settings';\nimport SettingsAccordian from '../../Components/Settings/SettingsAccordian';\nimport ManageRisk from '../../Assets/Settings/ManageRisk.png';\nimport ManageTrade from '../../Assets/Settings/ManageTrade.png';\nimport Notification from '../../Assets/sidebar/Notofication.png';\nimport ManageRiskAppetite from '../../Components/Settings/ManageRiskAppetite';\nimport ManageTradeExperience from '../../Components/Settings/ManageTradeExperience';\nimport NotificationSettings from '../../Components/Settings/NotificationSettings';\nimport apiRequest from '../../api/api';\nimport { toast } from 'react-toastify';\n\nconst Settings = () => {\n  const [settingData, setSettingData] = useState({\n    risk_appetite: 2,\n    trade_experience: 3,\n    app_notification: true,\n    push_notification: true,\n    sms_notification: true,\n    email_notification: true\n  });\n  const [notificationData, setNotificationData] = useState({\n    is_sms_notification_allowed: false,\n    is_email_notification_allowed: false\n  });\n\n  //fetch settings data\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    const { response, responseData, error } = await apiRequest(`api/v1/user-details`, 'GET');\n\n    if (!error) {\n      if (!response.ok) {\n        toast.error(\n          `Setting data fetching failed: ${responseData?.meta?.message || 'Unknown error'}`\n        );\n      }\n    } else {\n      toast.error('An error occurred while fetching settings', error);\n    }\n\n    setSettingData({\n      risk_appetite: responseData.data.risk_appetite,\n      trade_experience: responseData.data.trade_experience,\n      app_notification: responseData.data.app_notification,\n      push_notification: responseData.data.push_notification,\n      sms_notification: responseData.data.sms_notification,\n      email_notification: responseData.data.email_notification\n    });\n    setNotificationData({\n      is_sms_notification_allowed: responseData.data.is_sms_notification_allowed,\n      is_email_notification_allowed: responseData.data.is_email_notification_allowed\n    });\n  }\n\n  const handleSubmit = async () => {\n    const { response, responseData, error } = await apiRequest(\n      `api/v1/settings`,\n      'POST',\n      settingData\n    );\n\n    if (!error) {\n      if (response.ok) {\n        toast.success(responseData.meta.message);\n      } else {\n        toast.error(`Setting update failed: ${responseData?.meta?.message || 'Unknown error'}`);\n      }\n    } else {\n      toast.error('An error occurred while updating settings', error);\n    }\n    setSettingData({\n      risk_appetite: responseData.data.risk_appetite,\n      trade_experience: responseData.data.trade_experience,\n      app_notification: responseData.data.app_notification,\n      push_notification: responseData.data.push_notification,\n      sms_notification: responseData.data.sms_notification,\n      email_notification: responseData.data.email_notification\n    });\n  };\n\n  return (\n    <>\n      <StyledSettings>\n        <div className=\"main-title\">Settings</div>\n\n        <div className=\"setting-accordion\">\n          <div className=\"setting-wrapper\">\n            <SettingsAccordian\n              accordionTitleIcon={ManageRisk}\n              accordionTitle=\"Manage Risk Appetite\"\n              accordionContent={\n                <ManageRiskAppetite settingData={settingData} setSettingData={setSettingData} />\n              }\n            />\n            <SettingsAccordian\n              accordionTitleIcon={ManageTrade}\n              accordionTitle=\"Manage Trading Experience\"\n              accordionContent={\n                <ManageTradeExperience settingData={settingData} setSettingData={setSettingData} />\n              }\n            />\n            <SettingsAccordian\n              accordionTitleIcon={Notification}\n              accordionTitle=\"Notification\"\n              accordionContent={\n                <NotificationSettings\n                  setSettingData={setSettingData}\n                  settingData={settingData}\n                  notificationData={notificationData}\n                />\n              }\n            />\n          </div>\n          <div className=\"setting-button\" onClick={handleSubmit}>\n            Save Changes\n          </div>\n        </div>\n      </StyledSettings>\n    </>\n  );\n};\n\nexport default Settings;\n"],"names":["StyledSettings","styled","div","_templateObject","_taggedTemplateLiteral","SettingsManageRiskAppetite","_templateObject2","SettingsManageTradeExperience","_templateObject3","SettingsNotification","_templateObject4","SettingsAccordionWrapper","_templateObject5","SettingsAccordionHeader","_templateObject6","SettingsAccordionTitle","_templateObject7","SettingsAccordionArrow","_templateObject8","SettingsAccordionContent","_templateObject9","_ref","accordionTitleIcon","accordionTitle","accordionContent","isOpen","setIsOpen","useState","_jsx","_Fragment","children","_jsxs","onClick","toggleAccordion","className","src","alt","marks","value","label","defaultValue","onChange","sliderValue","setSliderValue","style","fontFamily","position","type","min","max","length","step","event","newValue","parseInt","target","closestMark","reduce","prev","curr","Math","abs","width","borderRadius","background","border","appearance","WebkitAppearance","MozAppearance","outline","settingData","setSettingData","newRiskAppetiteData","Number","risk_appetite","DiscreteSlider","riskAppetite","handleTradeExperienceChange","e","trade_experience","id","name","checked","htmlFor","notificationData","handleCheckboxChange","checkboxName","prevStates","app_notification","push_notification","sms_notification","disabled","is_sms_notification_allowed","email_notification","is_email_notification_allowed","Settings","setNotificationData","useEffect","async","response","responseData","error","apiRequest","toast","_responseData$meta","ok","concat","meta","message","data","fetchData","SettingsAccordian","ManageRiskAppetite","ManageTradeExperience","Notification","NotificationSettings","_responseData$meta2","success"],"sourceRoot":""}